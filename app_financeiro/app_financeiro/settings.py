"""
Django settings for app_financeiro project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
<<<<<<< HEAD
import environ
from cryptography.fernet import Fernet

# Build paths inside the project like this: BASE_DIR  'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print(os.path.join(BASE_DIR, '.env'))
=======
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
<<<<<<< HEAD
# Inicializar el entorno
env = environ.Env()
# Leer el archivo .env
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Obtener la clave secreta
SECRET_KEY = env('SECRET_KEY')

# Cargar la clave de cifrado
ENCRYPTION_KEY = env('ENCRYPTION_KEY')
# Verifica si la clave de cifrado es válida
try:
    cipher_suite = Fernet(ENCRYPTION_KEY.encode())
except ValueError as e:
    print(f"Error al inicializar Fernet: {e}")
# Configuración de depuración
DEBUG = env.bool('DEBUG', default=False)  # Por defecto será False en producción
=======
SECRET_KEY = 'django-insecure-+6*p-j1n%5@5*)7f)h$$#q-s@^6(%af7$uk)u_jc$&+nd@jp)1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
<<<<<<< HEAD
#    'crispy_forms',
    'corsheaders',
    'rest_framework',
=======
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
    'home',
    'categoria',
    'authp',
    'gastos',
<<<<<<< HEAD
    'broker_sim',
    'metas',
    'api'

    
=======
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
<<<<<<< HEAD

    'corsheaders.middleware.CorsMiddleware',

]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}


# Permitir todos los orígenes (no recomendado para producción)
CORS_ALLOW_ALL_ORIGINS = True

# O permitir solo ciertos orígenes
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Reemplaza con el origen de tu frontend
    "http://127.0.0.1:3000",
=======
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
]

ROOT_URLCONF = 'app_financeiro.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
<<<<<<< HEAD
                'home.context_processors.user_settings'
=======
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
            ],
        },
    },
]

WSGI_APPLICATION = 'app_financeiro.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
<<<<<<< HEAD
AUTH_USER_MODEL = 'authp.CustomUser'
=======

>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
# El directorio base del proyecto
BASE_DIR         = Path(__file__).resolve().parent.parent
STATIC_URL       = '/static/'
STATIC_ROOT      = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    #
]
<<<<<<< HEAD
CRISPY_TEMPLATE_PACK = 'Bulma'
=======
>>>>>>> 89e3e9720cb51446d3bbd46facb6e2aa4915fe0e
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
